{% extends 'layout.html.twig' %}
{% block title %}ATP!{% endblock %}
{% block stylesheets %}
    {{ parent() }}
    {# 'app' must match the first argument to addEntry() in webpack.config.js #}
    {{ encore_entry_link_tags('dashboard') }}
    <!-- Renders a link tag (if your module requires any CSS)
                     <link rel="stylesheet" href="/build/app.css"> -->

{% endblock %}
{% block javascripts %}
    <script type="application/javascript">

        let xKeys = {{ keys|json_encode|raw }};
        let yValues = {{ values|json_encode|raw }};
        let done = {{ done|json_encode|raw }};
        let phases = [];
        let phases2 = [];

        function resetZoom() {
            chartAtpInstance.resetZoom();
        }

        window.toggleDragMode = function () {
            let chart = chartAtpInstance;
            let zoomOptions = chart.options.zoom;
            zoomOptions.enabled = !zoomOptions.enabled;
            chart.update();
            document.getElementById('zoom-switch').innerText = zoomOptions.enabled ? 'Disable zoom mode' : 'Enable zoom mode';
        };
        window.togglePanMode = function () {
            let chart = chartAtpInstance;
            let panOptions = chart.options.pan;
            panOptions.enabled = !panOptions.enabled;
            chart.update();
            document.getElementById('pan-switch').innerText = panOptions.enabled ? 'Disable pan mode' : 'Enable pan mode';
        };
        window.toggleEdit = function () {
            let chart = chartAtpInstance;
            chart.config.data.datasets.find('newTune').data = objectConcat(done, yValues);
            chart.config.data.datasets.find('FTP').data = objectConcat(done, yValues).ftpO();
            chart.config.data.datasets.find('FTPDone').data = objectConcat(done, yValues).ftpO();
            chart.update();
            //objectConcat(done, yValues),
        };

        function createTimeArray(oIn) {
            let arr = [];

            Object.keys(oIn).forEach(function (x) {
                arr.push({
                    x: moment(x),
                    y: oIn[x]
                });
            });

            return arr;
        }

        function objectConcat(oIn, pIn) {
            let arr = [];

            Object.keys(oIn).forEach(function (x) {
                if (!(x in pIn)) {
                    arr.push({
                        x: moment(x),
                        y: oIn[x]
                    });
                } else {
                    arr.push({
                        x: moment(x),
                        y: pIn[x]
                    });
                }
            });

            return arr;
        }

    </script>
    {{ parent() }}
    {{ encore_entry_script_tags('dashboard') }}

    <!-- Renders app.js & a webpack runtime.js file
        <script src="/build/runtime.js"></script>
        <script src="/build/app.js"></script> -->
{% endblock %}

{% block time %}
    <script type="application/javascript">
        let time = new Date();
        print(time.format('Y-MM-DD HH:I:s'));

    </script>
{% endblock %}

{% block page_content %}

    <input type="checkbox">
    <div class="tunecontainer">
        <div style="width:100%; text-align: center; font-size:larger;margin-top: 2px;padding-top: 2px;margin-bottom:15px;">
            <span></span>
        </div>
        <canvas id="chartJSContainer" width="1920" height="500"></canvas>
    </div>
    <div class="row">
        <div class="col-lg-offset-3">

            <button class="waves-effect btn" id="applyChanges">Apply Changes</button>
            <button class="waves-effect btn" id="cancelChanges">Cancel Edits</button>
            <button class="waves-effect btn" id="undoChanges">Undo Applied Changes</button>
            <button class="waves-effect btn" onclick="resetZoom()">Reset Zoom</button>
            <button class="waves-effect btn" onclick="toggleEdit()">Edit</button>
            <button class="waves-effect btn" id="zoom-switch" onclick="toggleDragMode()">Disable zoom mode
            </button>
            <button class="waves-effect btn" id="pan-switch" onclick="togglePanMode()">Disable pan mode
            </button>
        </div>
    </div>
    <div class="row">
        <table id="example" class="display" cellspacing="0" width="100%">
            <thead>
            <tr>
                <th>startTimeLocal</th>
                <th>Activity Name</th>
                <th>Type</th>
                <th>Distance</th>
                <th>Duration</th>
                <th>Average Speed</th>
                <th>Average HR</th>
                <th>Average Run Cadence</th>
                <th>Stride Length</th>
                <th>Vertical Oscillation</th>
                <th>Training Effect</th>
                <th>vO2 Max</th>
                <th>Avg Ground Contact Balance</th>
            </tr>
            </thead>
            {#            <tfoot>#}
            {#            <tr>#}
            {#                <th>Name</th>#}
            {#                <th>Position</th>#}
            {#                <th>Office</th>#}
            {#                <th>Extn.</th>#}
            {#                <th>Start date</th>#}
            {#                <th>Salary</th>#}
            {#            </tr>#}
            {#            </tfoot>#}
        </table>
    </div>

{% endblock %}

{% block left_curtain %}
    <div class="row">

        <div class="controls flat_skin">
            <input type="checkbox">
            <label>Checkbox 1</label>

            <input type="checkbox" checked>
            <label>Checkbox 2</label>

            <input type="radio" name="iCheck">
            <label>Radio button 1</label>

            <input type="radio" name="iCheck" checked>
            <label>Radio button 2</label>
        </div>


        <div class="controls polaris">
            <input type="checkbox">
            <label>Checkbox 1</label>

            <input type="checkbox" checked>
            <label>Checkbox 2</label>

            <input type="radio" name="iCheck">
            <label>Radio button 1</label>

            <input type="radio" name="iCheck" checked>
            <label>Radio button 2</label>

            <label>
                <input type="checkbox" name="quux[1]" disabled>
                Foo
            </label>

            <label for="baz[1]">Bar</label>
            <input type="radio" name="quux[2]" id="baz[1]" checked>

            <label for="baz[2]">Bar</label>
            <input type="radio" name="quux[2]" id="baz[2]">
        </div>

        <div class="col-lg-5">
            <div class="controls line">
                <input type="checkbox" name="name1" id="name1">
                <label>Checkbox 1</label>

                <input type="checkbox" checked>
                <label>Checkbox 2</label>

                <input type="radio" name="iCheck" value="1">
                <label>Lorem ipusm dolor hat et uns</label>

                <input type="radio" name="iCheck" value="2" checked>
                <label>Radio button 2</label>
            </div>
        </div>
        <div class="col-lg-5">
            <div class="controls square">
                <input type="checkbox" name="name2" id="name2">
                <label>Checkbox 1</label>

                <input type="checkbox" checked>
                <label>Checkbox 2</label>

                <input type="radio" name="iCheck" value="1">
                <label>Lorem ipusm dolor hat et uns</label>

                <input type="radio" name="iCheck" value="2" checked>
                <label>Radio button 2</label>
            </div>
        </div>

        <div class="col-lg-5">
            <div class="ion">
                <label><input type="checkbox" name="think" value="0"/> Work</label>
                <label><input type="checkbox" name="think" value="1" checked/> Rest</label>
                <label><input type="checkbox" name="think" value="2" disabled checked/> Sex</label>

                <label class="icr-label">
                    <span class="icr-item type_radio"></span>
                    <span class="icr-hidden"><input class="icr-input" type="radio" name="job" value="0"/></span>
                    <span class="icr-text">Super good</span>
                </label>
            </div>
        </div>
    </div>

{% endblock %}